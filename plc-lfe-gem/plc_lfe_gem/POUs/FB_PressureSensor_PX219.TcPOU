<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.16">
  <POU Name="FB_PressureSensor_PX219" Id="{9872138d-1d57-4ec1-bb67-dc57d4aea08b}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_PressureSensor_PX219
VAR_OUTPUT
    {attribute 'pytmc' := 'pv:'}
    Sensor : ST_PressureSensor;
END_VAR

VAR_INPUT
    rDefaultSP : REAL; (* Must assign a default value at instantiation*)
END_VAR

VAR
    v : REAL;
    AlarmTOF : TOF;


    (*IOs to be linked*)
    i_iPRESS_R AT %I* :INT; // input Pressure // Link to analog Input
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// for Omega PX219-xxx, signal 0-5VDC, corresponding to 16383 max

(* Real-value calculation *)

  IF Sensor.iPRESS_R > 16383 THEN; //Px219 max signal 5VDC, equal to beckhoff AO input 16383
       Sensor.rPRESS := -1;
     Sensor.xPStateAlarm:= TRUE;
     ELSE
         V:= 5.0*INT_TO_REAL(Sensor.iPRESS_R)/16383;
         Sensor.rPRESS := LREAL_TO_REAL(V/5.0*Sensor.rFull_Scale); //FULL scale in Psi for pressure tranducer
  END_IF

 (* Validate setpoint *)
    IF (Sensor.rPressSP < Sensor.rMinPressSP OR Sensor.rPressSP > Sensor.rMaxPressSP) THEN;
        Sensor.rPressSP := rDefaultSP;
    END_IF

 (* Set alarm bit when pressure lower and equal to setpoint, delay off for 60s*)

  AlarmTOF (IN := Sensor.rPRESS <= Sensor.rPressSP, PT := T#60S, Q => Sensor.xPstateAlarm);



 (*Soft IO Mapping*)
  ACT_IO();




  ]]></ST>
    </Implementation>
    <Action Name="ACT_IO" Id="{3fb50365-8a32-4152-b4b2-f7eb7e10da15}">
      <Implementation>
        <ST><![CDATA[Sensor.iPRESS_R := i_iPRESS_R;]]></ST>
      </Implementation>
    </Action>
  </POU>
</TcPlcObject>