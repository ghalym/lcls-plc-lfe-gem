<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="PRG_PMPS" Id="{3bbd9cd5-72c9-4b35-aa2f-63d3e3610a6e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_PMPS
VAR
 fbArbiterIO : FB_SubSysToArbiter_IO;
 test : bool;
 ar1 : bool;
 ar2 : bool;
  ar3 : bool;
 nReqID:UDINT;
 nReqRM:UDINT;
 bRemove:bool;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*Fast Fault instantiation*)
g_FastFaultOutput1.bAutoReset :=TRUE;
g_FastFaultOutput2.bAutoReset :=TRUE;
g_FastFaultOutput1.Execute();
g_FastFaultOutput2.Execute();


(* Arbiter Instantiation*)
(*Arbiter one responsible for the aperture valves*)
fbArbiterIO(Arbiter := GVL_ILK.g_fbArbiter, fbFFHWO := GVL_ILK.g_FastFaultOutput1);
GVL_ILK.g_fbArbiter2.ElevateRequest(GVL_ILK.g_fbArbiter);
GVL_ILK.g_fbArbiter3.ElevateRequest(GVL_ILK.g_fbArbiter);

GVL_ILK.g_fbArbiter.AddRequest(nReqID:= 90  , stReqBP:= PMPS_GVL.cstFullBeam, sDevName := 'plc-lfe-gem');
GVL_ILK.g_fbArbiter2.AddRequest(nReqID:= 91  , stReqBP:= PMPS_GVL.cstFullBeam, sDevName := 'plc-lfe-gem');
GVL_ILK.g_fbArbiter3.AddRequest(nReqID:= 92  , stReqBP:= PMPS_GVL.cstFullBeam, sDevName := 'plc-lfe-gem');


ar1:=GVL_ILK.g_fbArbiter.CheckRequestInPool(nReqID);
ar2:=GVL_ILK.g_fbArbiter2.CheckRequestInPool(nReqID);
ar3:=GVL_ILK.g_fbArbiter3.CheckRequestInPool(nReqID);
if (bRemove) THEN
    GVL_ILK.g_fbArbiter.RemoveRequest(nReqRM);
     GVL_ILK.g_fbArbiter2.RemoveRequest(nReqRM);
    GVL_ILK.g_fbArbiter3.RemoveRequest(nReqRM);
END_IF

]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>